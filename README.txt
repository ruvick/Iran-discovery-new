
Туристический многостраничный сайт "Shomol tour"

Создан полноценный сайт со следующими страницами:

• Главная
• Tour detail
• Tour catalog
• Hotel catalog
• Hotel details
• Activities catalog
• Activities detail
• Guides catalog
• Guides detail
• Articles catalog
• Article detail
• Air travel
• Visa
• Transfer
• Insurance
• Trains
• UI-KIT Компоненты
• Модальные окна

Сайт разработан с использованием чистого JavaScript, и все библиотеки также написаны на этом языке.

▎Технические особенности:

• Верстка: Используются относительные единицы REM для основных элементов и EM в медиазапросах.

• Отступы: Реализованы с помощью псевдокласса :not(:first-child). Текстовые отступы от заголовков также определены в единицах EM, что позволяет автоматически изменять отступы при изменении размера шрифта. Межстрочный интервал (line-height) задан в процентном соотношении относительно размера шрифта.

• Адаптивная сетка: Сайт имеет резиновую адаптивную сетку, построенную на flexbox и grid-технологиях с минимальным количеством медиазапросов.

• Стиль: Используется SCSS по методологии БЭМ, что позволяет легко переиспользовать и менять местами компоненты сайта.

Иконки реализованы с использованием SVG-спрайтов и иконочных шрифтов.

Открытие модальных окон, меню, дополнительных модулей, происходит без подергивания сайта. 


Старт проекта
------------------------------------------------------------------------------------------------------------
Команды терминала

Установка:
npm i

Запуск режима разработчика (c запуском сервера)
npm run dev

Запуск сборки проекта (без запуска сервера, только финальная сборка)
npm run build

Запуск сборки проекта и выгрузка результата на сервер по FTP. (без запуска локальконо сервера)
Конфигурация FTP находится в файле config/gulp-settings.js
npm run deploy

Запуск сборки проекта и создание zip архива с именем проекта. (без запуска локальконо сервера)
npm run zip

Запуск сборки проекта но без создания webp картинок. (без запуска сервера, только финальная сборка)
npm run devbuild

Запуск создания SVG спрайта, иконки нужно положить в папку src/svgicons,
готовый спрайт появится в папке dist/img/icons/icons.svg
(не входит в работу по умолчанию, при необходимости запустить командой)
npm run sprite

//------------------------------------------------------------------------------

Основные файлы для работы с шаблоном:
js/app.js
scss/style.scss

index.html - разводящая страница (содержание)
home.html - главная страница
файлы html/*.htm - подключаемые части

//------------------------------------------------------------------------------

Используются псевдонимы пути к папкам:
@img = src/img
@scss = src/scss
@js = src/js

Плагин для VS Code - Path Autocomplete
Настройки (Settings JSON):
"path-autocomplete.pathMappings": {
	"@img": "${folder}/src/img", // псевдоним для папки img
	"@scss": "${folder}/src/scss", // псевдоним для папки scss
	"@js": "${folder}/src/js", //  псевдоним для папки js
}

//------------------------------------------------------------------------------

При возникновении ошибок убедитесь что:
1) У вас установлен Node.js последней версии
2) Терминал открыт с правами администратора
3) В названиях папок на всем пути к проекту нет символа # или !
4) Папки и файлы должны быть названы латиницей без пробелов
5) Тег img и его содержимое должны быть записаны в одну строку без переносов
6) В атрибуте src должен быть указан путь к существующей картинке

//------------------------------------------------------------------------------

Прочие проблемы и их решения:
--------------------------------------
Ошибка node-sass.
Решения:
npm rebuild node-sass
и/или
npm install sass gulp-sass --save-dev
--------------------------------------
Ошибка Pyton
Решени:
npm install --global windows-build-tools
--------------------------------------
